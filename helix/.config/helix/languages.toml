# introudce new language server
# - set max completion results len to 20
# - completions will return before snippets by default
[language-server.scls]
command = "simple-completion-language-server"
config = { max_completion_items = 10, snippets_first = false }

[[language]]
name = "typescript"
language-servers = [ "typescript-language-server" ]
formatter = { command = 'npx', args = ["prettier", "--config", ".prettierrc", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

# [[language]]
# name = "typescript"
# language-id = "typescript"
# scope = "source.ts"
# injection-regex = "^(ts|typescript)$"
# file-types = ["ts"]
# shebangs = ["deno"]
# roots = ["deno.json", "deno.jsonc", "package.json"]
# auto-format = true
# language-servers = ["deno-lsp"]

[[language]]
name = "tsx"
language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint", "emmet-ls", "scls", "graphql"]
formatter = { command = 'npx', args = ["prettier", "--config", ".prettierrc", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "jsx"
language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint", "emmet-ls", "scls", "graphql"]
formatter = { command = 'npx', args = ["prettier", "--config", ".prettierrc", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint", "emmet-ls", "scls", "graphql"]
formatter = { command = 'npx', args = ["prettier", "--config", ".prettierrc", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "json"
language-servers = [ "vscode-json-language-server" ]
formatter = { command = 'npx', args = ["prettier", "--config", ".prettierrc", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "fish"
file-types = ["fish"]
language-servers = ["fish"]
auto-format = false

[[language]]
name = "go"
indent = { tab-width = 2, unit = " " }
auto-format = true

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

[[language]]
name = "html"
formatter = { command = 'npx', args = ["prettier", "--parser", "html"] }
language-servers = [ "vscode-html-language-server", "tailwindcss-react", "emmet-ls"]

[[language]]
name = "css"
formatter = { command = 'npx', args = ["prettier", "--parser", "css"] }
language-servers = [ "vscode-css-language-server", "tailwindcss-react", "emmet-ls"]

[language-server.fish]
args = ["--start"]
command = "fish-lsp"

[language-server.emmet-ls]
args = ["--stdio"]
command = "emmet-language-server"

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

[language-server.tailwindcss-vue]
command = "tailwindcss-language-server"
args = ["--stdio"]
config = {}

[language-server.tailwindcss-react]
language-id = "typescriptreact"
command = "tailwindcss-language-server"
args = ["--stdio"]
config = {}

[language-server.deno-lsp]
command = "deno"
args = ["lsp"]

[language-server.deno-lsp.config.deno]
enable = true

[language-server.astro-ls]
name = "astro"
scope = "source.astro"
injection-regex = "astro"
file-types = ["astro"]
roots = ["package.json", "astro.config.mjs"]
command = "astro-ls"
args = ["--stdio"]
config = {typescript = {tsdk = "/Users/ali/Desktop/projects/taby-frontend-2023/node_modules/typescript/lib"}, environment = "node"}

[[language]]
name = "astro"
formatter = { command = 'prettier', args = ["--parser", "astro"] }
auto-format = true
language-servers = [ "astro-ls" ]

[language-server.gleam-lsp]
name = "gleam"
file-types = ["gleam"]
command = "gleam"
args = ["lsp"]

[[language]]
name = "gleam"
formatter = { command = 'prettier', args = ["--parser", "astro"] }
auto-format = true
language-servers = [ "gleam-lsp" ]

[language-server.typescript-language-server.config]
documentFormatting = false
hostInfo = "helix"

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true
